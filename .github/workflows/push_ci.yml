name: Push CI

on:
  push:
    branches:
      - main
      - refine-workflow
  workflow_dispatch:

jobs:
  check_changed_files:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.echo_results.outputs.version_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check Whether VERSION Changes
        id: changed-version
        uses: tj-actions/changed-files@v44
        with:
          files: VERSION

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-version.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Echo Results
        id: echo_results
        env:
          VERSION_CHANGED: ${{ steps.changed-version.outputs.any_changed }}
        run: |
          echo "VERSION changed: $VERSION_CHANGED"
          echo "version_changed=$VERSION_CHANGED" >> "$GITHUB_OUTPUT"

  echo_positive:
    needs: check_changed_files
    runs-on: ubuntu-latest
    if: needs.check_changed_files.outputs.version_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - run: echo "VERSION has changed"

  echo_negative:
    needs: check_changed_files
    runs-on: ubuntu-latest
    if: needs.check_changed_files.outputs.version_changed != 'true'
    steps:
      - uses: actions/checkout@v4

      - run: echo "VERSION does not change" 

  # Jobs that will run when VERSION does _not_ change
  kernel_test:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed != 'true'
    uses: ./.github/workflows/test_asterinas.yml

  osdk_test:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed != 'true'
    uses: ./.github/workflows/test_osdk.yml

  check_build_doc:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed != 'true'
    uses: ./.github/workflows/publish_api_docs.yml
    with:
      upload: false

  update_website:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed != 'true'
    uses: ./.github/workflows/publish_website.yml
    with:
      deploy: true
    secrets:
      BOOK_PUBLISH_KEY: ${{ secrets.BOOK_PUBLISH_KEY }}

  check_publish_osdk:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed != 'true'
    uses: ./.github/workflows/publish_osdk.yml
    with:
      publish: false

  # Jobs that will run when VERSION changes
  docker_push:
    needs: check_changed_files
    if: needs.check_changed_files.outputs.version_changed == 'true'
    uses: ./.github/workflows/publish_docker_images.yml
    with:
      push: true
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  kernel_test_release:
    needs: [docker_push]
    uses: ./.github/workflows/test_asterinas.yml

  osdk_test_release:
    needs: [docker_push]
    uses: ./.github/workflows/test_osdk.yml

  update_doc_release:
    needs: [kernel_test_release, osdk_test_release]
    uses: ./.github/workflows/publish_api_docs.yml
    with:
      upload: true
    secrets:
      API_DOCS_PUBLISH_KEY: ${{ secrets.API_DOCS_PUBLISH_KEY }}

  update_website_release:
    needs: [kernel_test_release, osdk_test_release]
    uses: ./.github/workflows/publish_website.yml
    with:
      deploy: true
    secrets:
      BOOK_PUBLISH_KEY: ${{ secrets.BOOK_PUBLISH_KEY }}

  release_tag:
    needs: [update_doc_release, update_website_release]
    uses: ./.github/workflows/push_git_tag.yml

  publish_osdk:
    needs: [release_tag]
    uses: ./.github/workflows/publish_osdk.yml
    with:
      publish: true
    # FIXME: Github allows inherit secrets from caller workflow,
    # with a simple `secrets: inherit`.
    # But this syntax is only supported for organization
    # Ref: <https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow>
    secrets:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
