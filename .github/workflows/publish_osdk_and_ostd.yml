name: Publish OSDK and OSTD

on:
  workflow_call:
    inputs:
      skip: 
        description: 'Whether to skip the osdk-publish and ostd-publish job'
        required: false
        default: true
        type: 'boolean'
      publish:
        description: 'Whether to publish osdk and ostd'
        required: false
        default: false
        type: 'boolean'
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: false
  workflow_dispatch:


jobs:
  osdk-publish:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: asterinas/asterinas:0.6.2
    steps:
      - uses: actions/checkout@v4

      - name: Check Publish OSDK
        if: ${{ !inputs.publish }}
        run: |
          cd osdk
          cargo publish --dry-run
        
      - name: Publish OSDK
        if: ${{ inputs.publish }}
        env:
          REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cd osdk
          cargo publish --token ${REGISTRY_TOKEN}

  ostd-publish:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: asterinas/asterinas:0.6.2
    strategy:
      matrix:
        # All supported targets, this array should keep consistent with
        # `package.metadata.docs.rs.targets` in `ostd/Cargo.toml`
        target: ['x86_64-unknown-none']
    steps:
      - uses: actions/checkout@v4

      - name: Check Publish OSTD
        if: ${{ !inputs.publish }}
        run: |
          cd ostd
          cargo publish --target ${{ matrix.target }} --dry-run
          cargo doc --target ${{ matrix.target }}
      
      - name: Publish OSTD
        if: ${{ inputs.publish }}
        env:
          REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        # Using any target that OSTD supports for publishing is ok.
        # Here we use the same target as 
        # `package.metadata.docs.rs.default-target` in `ostd/Cargo.toml`.
        run: |
          cd ostd
          cargo publish --target x86_64-unknown-none --token ${REGISTRY_TOKEN}
      
