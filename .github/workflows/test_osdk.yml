name: Test OSDK

on:
  workflow_call:
    inputs:
      skip: 
        description: 'Whether to skip osdk test'
        required: false
        default: false
        type: 'boolean'
  workflow_dispatch:

jobs:
  osdk-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        # asterinas/asterinas container is the developing container of asterinas,
        # asterinas/osdk container is built with the intructions from Asterinas Book
        container: ['asterinas/asterinas', 'asterinas/osdk']
    # GitHub status check requires `osdk_test / osdk-test (asterinas/asterinas)` 
    # and `osdk_test / osdk-test (asterinas/osdk)` to be run successfully,
    # so we can't skip the whole osdk-test job, 
    # otherwise the two jobs on matrix values will not even be generated.
    # ubuntu:22.04 is a randomly-chosen image which will be used to run echo.
    container: ${{ !inputs.skip && format('{0}:0.2.0', matrix.container) || 'ubuntu:22.04' }}
    steps:
      - run: echo "Running in ${{ !inputs.skip && format('{0}:0.2.0', matrix.container) || 'ubuntu:22.04' }}"

      - uses: actions/checkout@v4

      - name: Lint
        id: lint
        if: ${{ matrix.container == 'asterinas/asterinas' && !inputs.skip }}
        run: make check_osdk

      # Github's actions/checkout@v4 will result in a new user (not root) 
      # and thus not using the Rust environment we set up in the container. 
      # So the RUSTUP_HOME needs to be set here. 
      # This only breaks when we invoke Cargo in the integration test of OSDK 
      # since the OSDK toolchain is not nightly.
      - name: Unit test
        id: unit_test
        if: ${{ !inputs.skip }}
        run: |
          cd osdk
          RUSTUP_HOME=/root/.rustup cargo +stable build
          RUSTUP_HOME=/root/.rustup cargo test
